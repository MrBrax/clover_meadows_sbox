@using System
@using Clover.Carriable
@using Clover.Components
@using Clover.Data
@using Clover.Player
@using Sandbox;
@using Sandbox.Network
@using Sandbox.UI;
@inherits Panel
@namespace Clover.Ui
@attribute [StyleSheet]

<root>
	@foreach ( var texture in Textures )
	{
		<Image Texture=@texture class="@( Paintbrush.CurrentTexturePath == texture.ResourcePath ? "selected" : "" )"/>
	}
</root>

@code {
	
	private List<Texture> Textures = new();

	private Paintbrush Paintbrush => PlayerCharacter.Local.Equips.GetEquippedItem<Paintbrush>( Equips.EquipSlot.Tool );

	protected override void OnAfterTreeRender( bool firstTime )
	{
		base.OnAfterTreeRender( firstTime );
		
		if ( firstTime )
		{
			Refresh();
		}
	}

	private void Refresh()
	{
		if ( !Paintbrush.IsValid() )
		{
			Log.Warning( "Paintbrush is not valid" );
			return;
		}
		
		Textures.Clear();

		foreach ( var path in Paintbrush.GetTextures() )
		{
			Textures.Add( Texture.Load( FileSystem.Data, $"decals/{path}" ) );
		}
		
		Log.Info( $"Paintbrush has {Textures.Count} textures" );

	}

	protected override int BuildHash()
	{
		return HashCode.Combine( Textures, Paintbrush.CurrentTexturePath );
	}

}
